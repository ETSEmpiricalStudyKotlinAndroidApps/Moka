query pullRequests($owner: String!, $name: String!, $after: String, $before: String, $perPage: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequests(last: $perPage, after: $after, before: $before) {
      nodes {
        author {
          avatarUrl
          login
        }
        id
        number
        createdAt
        title
        closed
        merged
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      totalCount
    }
  }
}

query pullRequest($owner: String!, $name: String!, $number: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequest(number: $number) {
      activeLockReason
      additions
      author {
        avatarUrl
        login
        resourcePath
        url
      }
      authorAssociation
      baseRef {
        id
        name
        prefix
        target {
          abbreviatedOid
          commitResourcePath
          commitUrl
          id
          oid
        }
      }
      baseRefName
      baseRefOid
      body
      bodyHTML
      bodyText
      changedFiles
      closed
      closedAt
      createdAt
      createdViaEmail
      databaseId
      deletions
      editor {
        avatarUrl
        login
        resourcePath
        url
      }
      headRef {
        id
        name
        prefix
        target {
          abbreviatedOid
          commitResourcePath
          commitUrl
          id
          oid
        }
      }
      headRefName
      headRefOid
      headRepositoryOwner {
        avatarUrl
        id
        login
        resourcePath
        url
      }
      id
      includesCreatedEdit
      isCrossRepository
      lastEditedAt
      locked
      maintainerCanModify
      mergeable
      merged
      mergedAt
      mergedBy {
        avatarUrl
        login
        resourcePath
        url
      }
      milestone {
        closed
        closedAt
        createdAt
        creator {
          avatarUrl
          login
          resourcePath
          url
        }
        description
        dueOn
        id
        number
        resourcePath
        state
        title
        updatedAt
        url
      }
      number
      permalink
      publishedAt
      reactionGroups {
        content
        createdAt
        subject {
          databaseId
          id
          viewerCanReact
        }
        viewerHasReacted
      }
      resourcePath
      revertResourcePath
      revertUrl
      state
      title
      updatedAt
      url
      viewerCanApplySuggestion
      viewerCanReact
      viewerCanSubscribe
      viewerCanUpdate
      viewerCannotUpdateReasons
      viewerDidAuthor
      viewerSubscription
    }
  }
}

query pullRequestTimeline($owner: String!, $name: String!, $number: Int!, $after: String, $before: String, $perPage: Int!) {
  repository(owner: $owner, name: $name) {
    pullRequest(number: $number) {
      timelineItems(first: $perPage, after: $after, before: $before) {
        nodes {
          typename: __typename
          ... AssignedEventFragment
          ... BaseRefForcePushedEventFragment
          ... ClosedEventFragment
          ... CrossReferencedEventFragment
          ... DemilestonedEventFragment
          ... DeployedEventFragment
          ... DeploymentEnvironmentChangedEventFragment
          ... HeadRefDeletedEventFragment
          ... HeadRefForcePushedEventFragment
          ... HeadRefRestoredEventFragment
          ... IssueCommentFragment
          ... LabeledEventFragment
          ... LockedEventFragment
          ... MergedEventFragment
          ... MilestonedEventFragment
          ... PullRequestReviewEventFragment
          ... PullRequestReviewThreadFragment
          ... ReferencedEventFragment
          ... RenamedTitleEventFragment
          ... ReopenedEventFragment
          ... ReviewDismissedEventFragment
          ... ReviewRequestRemovedEventFragment
          ... ReviewRequestedEventFragment
          ... UnassignedEventFragment
          ... UnlabeledEventFragment
          ... UnlockedEventFragment
        }
        pageInfo {
          startCursor
          endCursor
          hasNextPage
          hasPreviousPage
        }
      }
    }
  }
}