query issues($owner: String!, $name: String!, $after: String, $before: String, $perPage: Int!) {
  repository(owner: $owner, name: $name) {
    issues(last: $perPage, after: $after, before: $before) {
      nodes {
        author {
          avatarUrl
          login
        }
        id
        number
        createdAt
        title
        closed
      }
      pageInfo {
        hasNextPage
        hasPreviousPage
        startCursor
        endCursor
      }
      totalCount
    }
  }
}


query issue($owner: String!, $name: String!, $number: Int!) {
  repository(owner: $owner, name: $name) {
    issue(number: $number) {
      activeLockReason
        author {
        avatarUrl
        login
        resourcePath
        url
      }
      authorAssociation
      body
      bodyHTML
      bodyText
      closed
      closedAt
      createdAt
      createdViaEmail
      databaseId
      editor {
        avatarUrl
        login
        resourcePath
        url
      }
      id
      includesCreatedEdit
      lastEditedAt
      locked
      milestone {
        closed
        closedAt
        createdAt
        creator {
          avatarUrl
          login
          resourcePath
          url
        }
        description
        dueOn
        id
        number
        resourcePath
        state
        title
        updatedAt
        url
      }
      number
      publishedAt
      reactionGroups {
        content
        createdAt
        subject {
          databaseId
          id
          viewerCanReact
        }
        viewerHasReacted
      }
      resourcePath
      state
      title
      updatedAt
      url
      viewerCanReact
      viewerCanSubscribe
      viewerCanUpdate
      viewerCannotUpdateReasons
      viewerDidAuthor
      viewerSubscription
    }
  }
}

fragment ReferencedEventIssueFragment on Issue {
	title
  number
}

fragment ReferencedEventPullRequestFragment on PullRequest {
  title
  number
}

fragment AssignedEventFragment on AssignedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  user {
    login
    name
  }
}

fragment ClosedEventFragment on ClosedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  url
}

fragment CommitEventFragment on Commit {
  message
  signature {
    signature
  }
  author {
    avatarUrl
      user {
        login
      }
    }
    committer {
      avatarUrl
      user {
        login
      }
    }
}

fragment CrossReferencedEventFragment on CrossReferencedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  source {
    ... ReferencedEventIssueFragment
    ... ReferencedEventPullRequestFragment
  }
}

fragment DemilestonedEventFragment on DemilestonedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  milestoneTitle
}

fragment IssueCommentFragment on IssueComment {
  author {
    avatarUrl
    login
  }
  authorAssociation
  body, createdAt
  editor {
    avatarUrl
    login
  }
}

fragment LabeledEventFragment on LabeledEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  label {
    color
    name
  }
}

fragment LockedEventFragment on LockedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  lockReason
}

fragment MilestonedEventFragment on MilestonedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  milestoneTitle
}

fragment ReferencedEventFragment on ReferencedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  subject {
    ... ReferencedEventIssueFragment
    ... ReferencedEventPullRequestFragment
  }
}

fragment RenamedTitleEventFragment on RenamedTitleEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  currentTitle
  id
  previousTitle
}

fragment ReopenedEventFragment on ReopenedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
}

fragment SubscribedEventFragment on SubscribedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
}

fragment TransferredEventFragment on TransferredEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  fromRepository {
    nameWithOwner
  }
}

fragment UnassignedEventFragment on UnassignedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  user {
    login
    name
  }
}

fragment UnlabeledEventFragment on UnlabeledEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
  label {
    color
    name
  }
}

fragment UnlockedEventFragment on UnlockedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
}

fragment UnsubscribedEventFragment on UnsubscribedEvent {
  actor {
    avatarUrl
    login
  }
  createdAt
  id
}

query issueTimeline($owner: String!, $name: String!, $number: Int!, $after: String, $before: String, $perPage: Int!) {
  repository(owner: $owner, name: $name) {
    issue(number: $number) {
      timeline(first: $perPage, after: $after, before: $before) {
        nodes {
          typename: __typename
          ... AssignedEventFragment
          ... ClosedEventFragment
          ... CommitEventFragment
          ... CrossReferencedEventFragment
          ... DemilestonedEventFragment
          ... IssueCommentFragment
          ... LabeledEventFragment
          ... LockedEventFragment
          ... MilestonedEventFragment
          ... ReferencedEventFragment
          ... RenamedTitleEventFragment
          ... ReopenedEventFragment
          ... SubscribedEventFragment
          ... TransferredEventFragment
          ... UnassignedEventFragment
          ... UnlabeledEventFragment
          ... UnlockedEventFragment
          ... UnsubscribedEventFragment
        }
        pageInfo {
          startCursor
          endCursor
          hasNextPage
          hasPreviousPage
        }
      }
    }
  }
}