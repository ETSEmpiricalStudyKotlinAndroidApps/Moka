query Issue($owner: String!, $name: String!, $number: Int!) {
    repository(owner: $owner, name: $name) {
        issue(number: $number) {
            # Reason that the conversation was locked.
            activeLockReason
            # The actor who authored the comment.
            author {
                ... Actor
            }
            # Author's association with the subject of the comment.
            authorAssociation
            # Identifies the body of the issue.
            body
            # Identifies the body of the issue rendered to HTML.
            bodyHTML
            # Identifies the body of the issue rendered to text.
            bodyText
            # `true` if the object is closed (definition of closed may depend on type)
            closed
            # Identifies the date and time when the object was closed.
            closedAt
            # Identifies the date and time when the object was created.
            createdAt
            # Check if this comment was created via an email reply.
            createdViaEmail
            # The actor who edited the comment.
            editor {
                ... Actor
            }
            id
            # Check if this comment was edited and includes an edit with the creation data
            includesCreatedEdit
            # The moment the editor made the last edit
            lastEditedAt
            # `true` if the object is locked
            locked
            # Identifies the milestone associated with the issue.
            milestone {
                ... Milestone
            }
            # Identifies the issue number.
            number
            # Identifies when the comment was published at.
            publishedAt
            # A list of reactions grouped by content left on the subject.
            reactionGroups {
                ... ReactionGroup
            }
            # The HTTP path for this issue
            resourcePath
            # Identifies the state of the issue.
            state
            # Identifies the issue title.
            title
            # Identifies the date and time when the object was last updated.
            updatedAt
            # The HTTP URL for this issue
            url
            # Can user react to this subject
            viewerCanReact
            # Check if the viewer is able to change their subscription status for the repository.
            viewerCanSubscribe
            # Check if the current viewer can update this object.
            viewerCanUpdate
            # Reasons why the current viewer can not update this comment.
            viewerCannotUpdateReasons
            # Did the viewer author this comment.
            viewerDidAuthor
            # Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.
            viewerSubscription
        }
    }
}